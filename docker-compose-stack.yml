version: "3.1"
 
services:
    
    swarm-listener:
        image: 
            vfarcic/docker-flow-swarm-listener
        networks:
            - proxy
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            - DF_NOTIFY_CREATE_SERVICE_URL=http://proxy:8080/v1/docker-flow-proxy/reconfigure
            - DF_NOTIFY_REMOVE_SERVICE_URL=http://proxy:8080/v1/docker-flow-proxy/remove
        logging:
          driver: gelf
          options:
            gelf-address: udp://127.0.0.1:12201
        deploy:
            placement:
                constraints: [node.role == manager]
 
    proxy:
        image: 
            vfarcic/docker-flow-proxy
        ports:
            - 80:80
            - 443:443
        networks:
            - proxy
        environment:
            - LISTENER_ADDRESS=swarm-listener
            - MODE=swarm
        logging:
          driver: gelf
          options:
            gelf-address: udp://127.0.0.1:12201
        deploy:
            replicas: 2
    
    nexus:
        image: sonatype/nexus3
        environment:
            - NEXUS_CONTEXT=nexus
        networks:
            - proxy
        volumes:
            - nexus_data:/nexus-data
        logging:
          driver: gelf
          options:
            gelf-address: udp://127.0.0.1:12201
        deploy:
            labels:
                - com.df.notify=true
                - com.df.distribute=true
                - com.df.servicePath=/nexus
                - com.df.port=8081

    sonardb:
        image: postgres
        environment:
            - POSTGRES_USER=sonar
            - POSTGRES_PASSWORD=sonar
        networks:
            - sonarqube
        volumes:
            - postgresql:/var/lib/postgresql
            - postgresql_data:/var/lib/postgresql/data
        logging:
          driver: gelf
          options:
            gelf-address: udp://127.0.0.1:12201
                
    sonarqube:
        image: sonarqube
        environment:
            - SONARQUBE_JDBC_URL=jdbc:postgresql://sonardb:5432/sonar
            - SONARQUBE_JDBC_USERNAME=sonar
            - SONARQUBE_JDBC_PASSWORD=sonar
        networks:
            - sonarqube
            - proxy
        volumes:            
            - sonarqube_conf:/opt/sonarqube/conf
            - sonarqube_data:/opt/sonarqube/data
            - sonarqube_extensions:/opt/sonarqube/extensions
            - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins        
        command: ["-Dsonar.web.context=/sonar"]
        logging:
          driver: gelf
          options:
            gelf-address: udp://127.0.0.1:12201
        deploy:
            labels:
                - com.df.notify=true
                - com.df.distribute=true
                - com.df.servicePath=/sonar
                - com.df.port=9000
    
    jenkins:
        image: stefanprodan/jenkins
        environment:
            - JENKINS_OPTS='--prefix=/jenkins'
        networks:
            - proxy
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - java_home:/var/jenkins_home
            - ansible_home:/etc/ansible
        logging:
          driver: gelf
          options:
            gelf-address: udp://127.0.0.1:12201
        deploy:
            labels:
                - com.df.notify=true
                - com.df.distribute=true
                - com.df.servicePath=/jenkins
                - com.df.port=8080
                
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:5.2.2  
        volumes:
            - elasticsearchData:/usr/share/elasticsearch/data
        networks:
            - logging
        environment:
            xpack.security.enabled: "false"
            xpack.monitoring.enabled: "false"
            xpack.graph.enabled: "false"
            xpack.watcher.enabled: "false"
            
    logstash:
        image: docker.elastic.co/logstash/logstash:5.2.2
        ports:
          - "12201:12201/udp"
        networks:
            - logging
        volumes:
            - ./elk/logstash/config/pipeline:/usr/share/logstash/pipeline
            - ./elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
        
    kibana:
        image: docker.elastic.co/kibana/kibana:5.2.2
        ports:
            - 5601:5601
        networks:
            - logging
        volumes:
            - ./elk/kibana/config:/usr/share/kibana/config

    prometheus:
        build: prom
        image: prometheus
        ports:
            - "9090:9090"
        logging:
          driver: gelf
          options:
            gelf-address: udp://127.0.0.1:12201
        networks:
            - monitoring
            
    node-exporter:
        image: prom/node-exporter:master
        command: -collector.procfs /host/proc -collector.sysfs /host/sys -collector.filesystem.ignored-mount-points '^/(sys|proc|dev|host|etc)($$|/)' --collector.textfile.directory /etc/node-exporter/ --collectors.enabled='conntrack,diskstats,entropy,filefd,filesystem,loadavg,mdadm,meminfo,netdev,netstat,stat,textfile,time,vmstat,ipvs'
        deploy:
            mode: global
        volumes:
            - "/proc:/host/proc"
            - "/sys:/host/sys"
            - "/:/rootfs"
            - "/etc/hostname:/etc/host_hostname"
        environment:
            - HOST_HOSTNAME=/etc/host_hostname
        logging:
          driver: gelf
          options:
            gelf-address: udp://127.0.0.1:12201
        networks:
            - monitoring

    cadvisor:
        image: google/cadvisor:canary
        deploy:
            mode: global
        volumes:
            - "/:/rootfs"
            - "/var/run:/var/run"
            - "/sys:/sys"
            - "/var/lib/docker:/var/lib/docker"
        logging:
          driver: gelf
          options:
            gelf-address: udp://127.0.0.1:12201
        networks:
            - monitoring
      
networks:
    proxy:
    sonarqube:
    gitlab:
    logging:
    monitoring:
 
volumes:
    nexus_data:
    java_home:
    ansible_home:
    sonarqube_conf:
    sonarqube_data:
    sonarqube_extensions:
    sonarqube_bundled-plugins:
    postgresql:
    postgresql_data:
    elasticsearchData: