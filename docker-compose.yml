version: "3.3"

services:

    swarm-listener:
        image: vfarcic/docker-flow-swarm-listener
        networks:
            - proxy
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            - DF_NOTIFY_CREATE_SERVICE_URL=http://proxy:8080/v1/docker-flow-proxy/reconfigure
            - DF_NOTIFY_REMOVE_SERVICE_URL=http://proxy:8080/v1/docker-flow-proxy/remove
        deploy:
            placement:
                constraints: [node.role == manager]

    proxy:
        image: vfarcic/docker-flow-proxy
        ports:
            - 80:80
            - 443:443
        networks:
            - proxy
        environment:
            - LISTENER_ADDRESS=swarm-listener
            - MODE=swarm
        deploy:
            replicas: 1

    nexus:
        image: sonatype/nexus3
        hostname: nexus
        environment:
            - NEXUS_CONTEXT=nexus
        networks:
            - proxy
        volumes:
            - nexus_data:/nexus-data
        deploy:
            labels:
                - com.df.notify=true
                - com.df.distribute=true
                - com.df.servicePath=/nexus
                - com.df.port=8081

    sonarDB:
        image: postgres
        environment:
            - POSTGRES_USER=sonar
            - POSTGRES_PASSWORD=sonar
        networks:
            - sonarqube
        volumes:
            - postgresql:/var/lib/postgresql
            - postgresql_data:/var/lib/postgresql/data

    sonarqube:
        image: sonarqube
        hostname: sonarqube
        environment:
            - SONARQUBE_JDBC_URL=jdbc:postgresql://sonarDB:5432/sonar
            - SONARQUBE_JDBC_USERNAME=sonar
            - SONARQUBE_JDBC_PASSWORD=sonar
        networks:
            - sonarqube
            - proxy
        volumes:
            - sonarqube_conf:/opt/sonarqube/conf
            - sonarqube_data:/opt/sonarqube/data
            - sonarqube_extensions:/opt/sonarqube/extensions
            - sonarqube_bundled_plugins:/opt/sonarqube/lib/bundled-plugins
        command: ["-Dsonar.web.context=/sonar"]
        deploy:
            labels:
                - com.df.notify=true
                - com.df.distribute=true
                - com.df.servicePath=/sonar
                - com.df.port=9000

    jenkins:
        image: quay.io/shazchaudhry/docker-jenkins
        hostname: jenkins
        environment:
            - JENKINS_OPTS='--prefix=/jenkins'
        networks:
            - proxy
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./maven/settings-docker.xml:/var/jenkins_home/settings-docker.xml:ro
            - jenkins_home:/var/jenkins_home
        secrets: # See how secrets are used in this jenkins image at: https://github.com/shazChaudhry/docker-jenkins/blob/master/config/security.groovy
            - jenkins-user
            - jenkins-pass
#        logging:
#            driver: gelf
#            options:
#                gelf-address: udp://127.0.0.1:12201
        deploy:
            labels:
                - com.df.notify=true
                - com.df.distribute=true
                - com.df.servicePath=/jenkins
                - com.df.port=8080

    redis:
        image: sameersbn/redis
        networks:
            - gitlab
        volumes:
            - redisData:/var/lib/redis
        command: ["--loglevel warning"]

    gitlabDB:
        image: sameersbn/postgresql
        networks:
            - gitlab
        volumes:
            - gitlabPostgresqlData:/var/lib/postgresql
        environment:
            - DB_USER=gitlab
            - DB_PASS=password
            - DB_NAME=gitlabhq_production
            - DB_EXTENSION=pg_trgm

    gitlab:
        image: sameersbn/gitlab
        networks:
            - gitlab
            - proxy
        volumes:
            - gitlabData:/home/git/data
        environment:
           - DEBUG=false
           - DB_ADAPTER=postgresql
           - DB_HOST=gitlabDB
           - DB_PORT=5432
           - DB_USER=gitlab
           - DB_PASS=password
           - DB_NAME=gitlabhq_production

           - REDIS_HOST=redis
           - REDIS_PORT=6379

           - GITLAB_HTTPS=false
           - SSL_SELF_SIGNED=false

           - GITLAB_HOST=node1
           - GITLAB_PORT=80
           - GITLAB_SSH_PORT=22
           - GITLAB_RELATIVE_URL_ROOT=/gitlab
           - GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alphanumeric-string
           - GITLAB_SECRETS_SECRET_KEY_BASE=long-and-random-alphanumeric-string
           - GITLAB_SECRETS_OTP_KEY_BASE=long-and-random-alphanumeric-string

           - GITLAB_ROOT_PASSWORD=5iveL!fe
           - GITLAB_ROOT_EMAIL=admin@example.com

           - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true
           - GITLAB_NOTIFY_PUSHER=false

           - GITLAB_EMAIL=notifications@example.com
           - GITLAB_EMAIL_REPLY_TO=noreply@example.com
           - GITLAB_INCOMING_EMAIL_ADDRESS=reply@example.com

           - GITLAB_BACKUP_SCHEDULE=daily
           - GITLAB_BACKUP_TIME=01:00
        deploy:
            labels:
                - com.df.notify=true
                - com.df.distribute=true
                - com.df.servicePath.1=/gitlab
                - com.df.port.1=80
                - com.df.servicePath.2=/gitlab
                - com.df.port.2=22

    # keycloak:
    #     image: jboss/keycloak
    #     hostname: keycloak
    #     environment:
    #         - KEYCLOAK_PASSWORD=admin
    #         - KEYCLOAK_USER=admin
    #         - PROXY_ADDRESS_FORWARDING=true
    #     networks:
    #         - proxy
    #     deploy:
    #         labels:
    #             - com.df.notify=true
    #             - com.df.distribute=true
    #             - com.df.servicePath=/
    #             - com.df.port=8080

networks:
    proxy:
    sonarqube:
    gitlab:

volumes:
    nexus_data:
    jenkins_home:
    sonarqube_conf:
    sonarqube_data:
    sonarqube_extensions:
    sonarqube_bundled_plugins:
    postgresql:
    postgresql_data:
    redisData:
    gitlabPostgresqlData:
    gitlabData:

secrets:
    jenkins-user:
      external: true
    jenkins-pass:
      external: true
